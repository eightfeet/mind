<mxfile host="65bd71144e">
    <diagram id="PwrfwvznNI2sSzleH0DK" name="第 1 页">
        <mxGraphModel dx="1117" dy="673" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
            <root>
                <mxCell id="0"/>
                <mxCell id="1" parent="0"/>
                <mxCell id="2" value="&lt;h1&gt;创建组件&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
                    <mxGeometry x="10" y="10" width="190" height="50" as="geometry"/>
                </mxCell>
                <mxCell id="4" value="&lt;div style=&quot;background-color: rgb(30 , 30 , 30) ; font-family: &amp;#34;menlo&amp;#34; , &amp;#34;monaco&amp;#34; , &amp;#34;courier new&amp;#34; , monospace ; line-height: 18px&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(156 , 220 , 254)&quot;&gt;&amp;nbsp; &amp;nbsp;npm&lt;/span&gt;&lt;span style=&quot;color: rgb(206 , 145 , 120)&quot;&gt; run createClassModule &lt;/span&gt;&lt;font color=&quot;#ffff00&quot;&gt;Module&lt;/font&gt;&lt;span style=&quot;color: rgb(206 , 145 , 120)&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
                    <mxGeometry x="10" y="70" width="310" height="30" as="geometry"/>
                </mxCell>
                <mxCell id="5" value="运行上面脚本系统将在src/modules目录下创建一个名为Module的组件，组件是一个react Class组件，如果需要创建react Function组件可以运行 npm run createFunctionModule [Module];&lt;br&gt;&lt;br&gt;下面以&lt;span style=&quot;color: rgb(206 , 145 , 120) ; font-family: &amp;#34;menlo&amp;#34; , &amp;#34;monaco&amp;#34; , &amp;#34;courier new&amp;#34; , monospace&quot;&gt;&amp;nbsp;ChartDoughnutAndPie&amp;nbsp;&lt;/span&gt;组件为例创建一个统计图组件，统计图将引用第三方库chartjs，为了更方便地控制组件生命周期这里我们使用class类组件；&lt;br&gt;&lt;br&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=0;spacingTop=0;whiteSpace=wrap;overflow=hidden;rounded=0;fontColor=#000000;labelBackgroundColor=#FFFFFF;" parent="1" vertex="1">
                    <mxGeometry x="10" y="140" width="790" height="90" as="geometry"/>
                </mxCell>
                <mxCell id="6" value="&lt;h1&gt;&lt;font style=&quot;font-size: 20px&quot;&gt;组件的目录结构&lt;/font&gt;&lt;/h1&gt;&lt;p&gt;运行 npm run CreateClassModule ChartDoughnutAndPie 即在src/modules目录下创建一个名为ChartDoughnutAndPie的类组件；结构如下&lt;br&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote style=&quot;border: none ; margin: 0px 0px 0px 40px ; padding: 0px&quot;&gt;&lt;blockquote style=&quot;border: none ; margin: 0px 0px 0px 40px ; padding: 0px&quot;&gt;&lt;br&gt;&lt;/blockquote&gt;├── ChartDoughnutAndPie&lt;br&gt;│&amp;nbsp; &amp;nbsp;├── ChartDoughnutAndPie.config.ts&lt;br&gt;│&amp;nbsp; &amp;nbsp;├── ChartDoughnutAndPie.createStyles.ts&lt;br&gt;│&amp;nbsp; &amp;nbsp;├── ChartDoughnutAndPie.tsx&lt;br&gt;│&amp;nbsp; &amp;nbsp;├── README.md&lt;br&gt;│&amp;nbsp; &amp;nbsp;└── index.ts&lt;br&gt;├── ...&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;div&gt;ChartDoughnutAndPie.config.ts：组件的配置文件，包含组件需要对外开放的方法、事件、样式、以及组件的预设；&lt;/div&gt;&lt;div&gt;ChartDoughnutAndPie.createStyles.ts：组件的样式处理器，他负责将编辑器样式转换为运行时的内链样式&lt;/div&gt;&lt;div&gt;ChartDoughnutAndPie.tsx：组件的核心代码，组件的业务逻辑应该在这里处理，它是由一个&lt;span style=&quot;color: rgb(220 , 220 , 170) ; background-color: rgb(30 , 30 , 30) ; font-family: &amp;#34;menlo&amp;#34; , &amp;#34;monaco&amp;#34; , &amp;#34;courier new&amp;#34; , monospace&quot;&gt;PresetModule&lt;/span&gt;高阶组件包裹的业务组件，高阶的主要作用是处理组件与EventEmitter的事件方法对接以及其他层面上的对接，开发者无需过多考虑底层逻辑，只要专注于组件的业务层处理即可。&lt;/div&gt;&lt;div&gt;README.md：组件的帮助指引，建议组件开发者写好指引，这份指引将会提供给使用者查看，更方便使用者了解组件的意图和使用步骤&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=12;fontColor=#000000;" vertex="1" parent="1">
                    <mxGeometry x="10" y="250" width="790" height="370" as="geometry"/>
                </mxCell>
                <mxCell id="7" value="&lt;h1&gt;&lt;font style=&quot;font-size: 20px&quot;&gt;将组件挂载到编辑器&lt;/font&gt;&lt;/h1&gt;&lt;p&gt;将组件挂载到组件面板上需要先在组件定义文件中申明组件；打开&lt;/p&gt;&lt;p&gt;src/core/constants.tsx&lt;/p&gt;&lt;div style=&quot;color: rgb(212 , 212 , 212) ; background-color: rgb(30 , 30 , 30) ; font-family: &amp;#34;menlo&amp;#34; , &amp;#34;monaco&amp;#34; , &amp;#34;courier new&amp;#34; , monospace ; line-height: 18px&quot;&gt;&lt;div&gt;{&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe&quot;&gt;&amp;nbsp; &amp;nbsp; moduleName&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color: #ce9178&quot;&gt;&quot;ChartDoughnutAndPie&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe&quot;&gt;&amp;nbsp; &amp;nbsp; title&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color: #ce9178&quot;&gt;&quot;ChartDoughnutAndPie&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe&quot;&gt;&amp;nbsp; &amp;nbsp; discribe&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color: #ce9178&quot;&gt;&quot;环状/饼状&quot;&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;    &lt;span style=&quot;color: #9cdcfe&quot;&gt;&amp;nbsp; &amp;nbsp; icon&lt;/span&gt;&lt;span style=&quot;color: #9cdcfe&quot;&gt;:&lt;/span&gt; &lt;span style=&quot;color: #808080&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&quot;color: #4ec9b0&quot;&gt;Icon&lt;/span&gt; &lt;span style=&quot;color: #9cdcfe&quot;&gt;component&lt;/span&gt;=&lt;span style=&quot;color: #569cd6&quot;&gt;{&lt;/span&gt;&lt;span style=&quot;color: #dcdcaa&quot;&gt;IconChart&lt;/span&gt;&lt;span style=&quot;color: #569cd6&quot;&gt;}&lt;/span&gt; &lt;span style=&quot;color: #808080&quot;&gt;/&amp;gt;&lt;/span&gt;,&lt;/div&gt;&lt;div&gt;  }&lt;/div&gt;&lt;/div&gt;&lt;p&gt;在文件中申明组件名称、标题、描述、以及展示的图标即可，系统在组件面板上将会自动添加申明的组件，并通过组件名称去引用对应组件，所以这里不要将moduleName写错，一旦写错系统将无法找到对应的组件&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;labelBackgroundColor=#FFFFFF;fontFamily=Helvetica;fontSize=12;fontColor=#000000;" vertex="1" parent="1">
                    <mxGeometry x="10" y="585" width="790" height="370" as="geometry"/>
                </mxCell>
            </root>
        </mxGraphModel>
    </diagram>
</mxfile>